import groovy.swing.SwingBuilder
apply plugin: 'com.android.application'

android {
    compileSdkVersion 24
    buildToolsVersion "23.0.2"

    defaultConfig {
        applicationId "com.jodelXposed"
        minSdkVersion 17
        targetSdkVersion 24
        versionCode 8
        versionName "1.7.0"
    }
    signingConfigs {
        release {
            storeFile file("jodelxposed.keystore")
            keyAlias "JodelXposed"
            storePassword ''
            keyPassword ''
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    provided files('lib/XposedBridgeApi-54.jar')
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:24.0.0'
    compile 'commons-io:commons-io:2.4'
    compile 'com.google.android.gms:play-services-maps:8.4.0'
    compile 'com.google.android.gms:play-services-location:8.4.0'
    compile 'com.android.support:design:24.0.0'
    compile 'com.android.support:cardview-v7:24.0.0'
    compile(name:'rootfw-release', ext:'aar')
}

repositories {
    flatDir {
        dirs 'libs'
    }
}

gradle.taskGraph.whenReady { taskGraph ->
    if(taskGraph.hasTask(':app:assembleRelease')) {
        def storePass = ''
        def keyPass = ''
        if(System.console() == null) {
            new SwingBuilder().edt {
                dialog(modal: true, title: 'Enter password', alwaysOnTop: true, resizable: false, locationRelativeTo: null, pack: true, show: true) {
                    vbox { // Put everything below each other
                        label(text: "Please enter store passphrase:")
                        def input1 = passwordField()
                        label(text: "Please enter key passphrase:")
                        def input2 = passwordField()
                        button(defaultButton: true, text: 'OK', actionPerformed: {
                            storePass = input1.password;
                            keyPass = input2.password;
                            dispose();
                        })
                    }
                }
            }
        } else {
            storePass = System.console().readPassword("\nPlease enter store passphrase: ")
            keyPass = System.console().readPassword("\nPlease enter key passphrase: ")
        }

        if(storePass.size() <= 0 || keyPass.size() <= 0) {
            throw new InvalidUserDataException("You must enter the passwords to proceed.")
        }

        storePass = new String(storePass)
        keyPass = new String(keyPass)

        android.signingConfigs.release.storePassword = storePass
        android.signingConfigs.release.keyPassword = keyPass
    }
}